"0",""
"0","# assumptions"
"0",""
"0","n <- 100 # sample size per muni"
"0","n_muni <- 25"
"0","m <- 5 # participants per wg"
"0","n_wg <- 3 # number of wgs"
"0","b <- .2 # treatment effect in sds"
"0","n_wg_total <- n_wg*n_muni"
"0","icc <- 0.05"
"0","het_f <- 0.1 # heterogeneous effect for women"
"0","het_m <- 0.1 # heterogeneous effect for minorities"
"0",""
"0","f_prop <- 0.3 # proportion of women in sample"
"0","m_prop <- 0.2 # proportion of minorities in sample"
"0",""
"0","n_div_qns <- 5 # number of qns asking about divisions"
"0",""
"0","wgs <- rep(paste0(""wg"", 1:n_wg), each = m)"
"0",""
"0","# the assignment function is cumbersome but it mirrors what the actual balloting process might look like"
"0",""
"0","block_assign <- function(data){"
"0","  "
"0","  # probabilities are independent"
"0","  "
"0","  cons <- c(paste(""WG"", 1:n_wg), ""none"")"
"0","  "
"0","  lapply(1:n_muni, function(x){"
"0","    "
"0","    # get minority prob"
"0","    "
"0","    df <- data %>% "
"0","      filter(municipality==x)"
"0","    "
"0","    min_prob <- df %>% "
"0","      filter(municipality==x) %>% "
"0","      .$minority %>% "
"0","      mean()"
"0","    "
"0","    block_m <- df %>% "
"0","      summarise(female = mean(female),"
"0","                minority = mean(minority)) %>% "
"0","      apply(2, function(x) round(x*5))"
"0","    "
"0","    # first sample women"
"0","    "
"0","    f_total <- sum(df$female)"
"0","    "
"0","    f_mat <- c(c(rep(0, n_wg), n - f_total),"
"0","               c(rep(block_m[""female""], n_wg), f_total - (block_m[""female""] * n_wg))"
"0","               ) %>% "
"0","      matrix(ncol = 4, "
"0","             byrow = TRUE)"
"0","    "
"0","    "
"0","    df <- df %>% "
"0","      mutate(WG = block_ra(blocks = female, "
"0","                           block_m_each = f_mat,"
"0","                           conditions = cons),"
"0","             treated = ifelse(WG==""none"", 0, 1))"
"0","    "
"0","    # now sample minority"
"0","    "
"0","    # how many minority do we already have?"
"0","    "
"0","    mins <- df %>% "
"0","      group_by(WG) %>% "
"0","      summarise(s = sum(minority)) %>% "
"0","      filter(WG!=""none"") %>% "
"0","      .$s"
"0","    "
"0","    # remainder quota for minority"
"0","    "
"0","    rem_m <- block_m[""minority""] - mins"
"0","    rem_m[rem_m < 0] <- 0 # do not sample again if quota met"
"0","    "
"0","    rem_n <- n - sum(df$treated)"
"0","    "
"0","    m_total <- df %>% "
"0","      filter(treated==0) %>% "
"0","      .$minority %>% "
"0","      sum()"
"0","    "
"0","    m_mat <- c(c(rep(0, n_wg), rem_n - m_total),"
"0","               rem_m, m_total - sum(rem_m)) %>% "
"0","      matrix(ncol = 4, byrow = TRUE)"
"0","    "
"0","    df <- df %>%"
"0","      group_by(treated) %>% "
"0","      mutate(WG = if(mean(treated)==0){"
"0","        block_ra(blocks = minority,"
"0","                 block_m_each = m_mat,"
"0","                 conditions = cons)"
"0","      } else WG,"
"0","      treated = ifelse(WG==""none"", 0, 1))"
"0","    "
"0","    # remainder for the rest"
"0","    "
"0","    rem_all <- df %>% "
"0","      group_by(WG) %>% "
"0","      summarise(s = m - sum(treated)) %>% "
"0","      filter(WG!=""none"") %>% "
"0","      .$s"
"0","    "
"0","    rem_vec <- c("
"0","      sapply(1:n_wg, "
"0","           function(x) rep(cons[x], rem_all[x])) %>% "
"0","      unlist(),"
"0","      rep(""none"", n - sum(rem_all) - sum(df$treated))"
"0","    )"
"0","    "
"0","    df <- df %>% "
"0","      mutate(WG = if(mean(treated==0)){"
"0","        sample(rem_vec)"
"0","      } else WG,"
"0","      treated = ifelse(WG==""none"", 0, 1)) %>% "
"0","      ungroup()"
"0","    "
"0","  }) %>% "
"0","    bind_rows()"
"0","}"
"0",""
"0","# function to generate minority group for each municipality"
"0",""
"0","add_division <- function(data){"
"0","  "
"0","  lapply(1:n_muni, function(z){"
"0","    "
"0","    # which is the major source of division"
"0","    # probs should look different in each municipality"
"0","    "
"0","    probs <- runif(n_div_qns)"
"0","    probs <- probs/sum(probs)"
"0","    "
"0","    m_division <- sample(1:n_div_qns, n, "
"0","                         replace = TRUE, "
"0","                         prob = probs) %>% "
"0","      table() %>% "
"0","      which.max()"
"0","    "
"0","    # are you in majority or minority"
"0","    "
"0","    is_div_min <- sapply(runif(n_div_qns, 0.2, 0.8), # bounded to prevent having too few minorities"
"0","                        function(x) rbinom(n, 1, prob = x)) %>% "
"0","      .[,m_division]"
"0","    "
"0","    # flip so 1 = minority"
"0","    "
"0","    prop <- mean(is_div_min)"
"0","    "
"0","    if(prop>0.5) is_div_min <- 1-is_div_min else is_div_min <- is_div_min"
"0","    "
"0","    data %>% "
"0","      filter(municipality==z) %>% "
"0","      mutate(minority = is_div_min)"
"0","    "
"0","  }) %>% "
"0","    bind_rows()"
"0","}"
"0",""
"0","demean_vars <- function(data){"
"0","  data %>% "
"0","    mutate(across(c(female, minority), function(x) x-mean(x)))"
"0","}"
"0",""
